#!/usr/bin/env ruby
$LOAD_PATH << File.expand_path('../../lib', __FILE__)

require 'optparse'
require 'methadone'
require 'bsmart'

class App
  include Methadone::Main
  include Methadone::CLILogging

  main do |xml,csv,image_dir|
    catalog = load_catalog xml
    on_web  = load_web_skus csv
    image_dir ||= '.'

    candidates = catalog.web_candidates on_web, image_dir, options[:ignore_images]

    if candidates.empty?
      puts 'Nothing!'
    else
      print_products candidates
    end
  end

  def self.print_products products
    output = CSV.generate(col_sep: "\t") do |csv|
      csv << %w{sku name}
      products.each do |product|
        csv << [product.stock_number, product.description]
      end
    end
    puts output
  end

  def self.load_catalog file
    Bsmart::Stock::Catalog.from_xml File.read file
  end

  def self.load_web_skus csv
    skus = []
    CSV.foreach csv, headers: true do |row|
      skus << row['sku']
    end

    skus
  end

  # supplemental methods here

  # Declare command-line interface here

  # description "one line description of your app"
  #
  # Accept flags via:
  # on("--flag VAL","Some flag")
  # options[flag] will contain VAL
  #
  # Specify switches via:
  # on("--[no-]switch","Some switch")
  on("--ignore_images")
  #
  # Or, just call OptionParser methods on opts
  #
  # Require an argument
  # arg :some_arg 
  #
  # # Make an argument optional
  # arg :optional_arg, :optional

  use_log_level_option

  go!
end
